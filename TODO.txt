## **Planning**

**You should discuss these questions before you fork and clone the repo:**

- Will you use a planning tool (Jamboard, Figma) to plan your design/app structure?
- How are you going to work in the team? Mob, smaller groups or pairs etc.
- What is your quiz about?
- Which are your (at least) 5 questions and answers? (Remember, multiple choices required)
- How are you going to show the progress? i.e 1 / 5, 20%, 4 questions left.
- How will the user select the answer? Dropdown, selecting with keyboard commands, buttons, images?
- What will the summary screen look like?
- What components do you need?
- How are you dealing with the styling? CSS or Styled components?
- What stretch goals are you aiming for?






## **ðŸ”µ  Blue Level (Minimum Requirements)**

- Your quiz should have at least 5 questions.
- When the user selects an answer, it should show if they were correct or not.
- While going through the quiz, it should show which question you're on, or how many left - for example 'Question 5 / 15' or '10 questions left'.
- When the user has answered all the questions, they should get to a summary screen which tells them how many they got correct or incorrect.
- You should challenge yourself to make use of redux by making small components which interact with the store - don't just go for one big component.
- Don't forget CSS! Your quiz should be well styled.

## **ðŸ”´  Red Level (Intermediary Goals)**

- After selecting an answer, highlight the correct answer if they chose incorrectly.
- Create a visual progress bar showing how many questions are left to be answered.
- Use images or videos to make your questions and answers look richer.
- Give a score for correct answers and deduct points for incorrect answers. If the user goes below a certain score, they lose!
- Enrich the summary with information about what questions they got correct and what questions they should practice more